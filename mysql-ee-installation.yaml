---
- name: setup repo
  hosts: repo_server
  gather_facts: yes
  vars:
    download_url: "https://updates.oracle.com/Orion/Services/download/p32866622_580_Linux-x86-64.zip?aru=24223247&patch_file=p32866622_580_Linux-x86-64.zip"
    download_dest: /opt/setup/mysql8.zip
    # download_dest: /Users/hieunguyen/Downloads/test.zip
  
  tasks:
    - name: disable security
      include_role:
        name: linux-configure-security

    - name: download repo
      include_role:
        name: oracle-MOS-download

    - name: setup repo
      block:
        - name: unzip
          ansible.builtin.unarchive:
            src: "{{ download_dest }}"
            dest: /opt/
            remote_src: yes

        - name: find unzipped file
          shell: find /opt -name "mysql-commercial*.tar.gz"
          register: tar_file

        - name: create repo
          include_role:
            name: setup_yum_repo
          vars:
            tarball: "{{ tar_file }}"
            repo_name: mysql8-EE

#################################################################################################################################

- name: install mysqld
  hosts: test
  gather_facts: no
  vars:
    mysql_port: 3306
    mysql_password: oracle_4U
    error_log: /var/log/mysqld.log
  tasks:
    - name: Configure Security
      include_role:
        name: configure_security

    - name: Install MySQL EE
      block:
        - name: Get YUM repo config file
          synchronize:
            src: /etc/yum.repos.d/mysql8-EE.repo
            dest: /etc/yum.repos.d/mysql8-EE.repo
          delegate_to: "{{ groups['repo_server'][0] }}"

        - name: Install MySQL Enterprise
          block:
            - name: uninstall community/mariadb
              ansible.builtin.yum:
                name:
                  - mariadb*
                  - mysql*
                state: removed
            - name: install enterprise
              ansible.builtin.yum:
                name:
                  - mysql-commercial-server
                  - mysql-shell-commercial
                state: present
        - name: Configure MySQL
          block:
            - name: set configuration
              include_role:
                name: mysql_configuration
            - name: init MySQL 
              systemd:
                name: mysqld 
                state: started
            - name: reset root password
              block:
                - name: skip grant tables
                  lineinfile:
                    path: /etc/my.cnf
                    line: skip-grant-tables
                    state: present
                    insertafter: '\[mysqld\]'

                - name: restart service
                  ansible.builtin.systemd:
                    state: restarted
                    name: mysqld

                - name: set root password
                  shell: mysql -e "flush privileges;alter user root@'localhost' identified by '{{ mysql_password }}';"
                - name: remove skip grant tables
                  lineinfile:
                    path: /etc/my.cnf
                    line: skip-grant-tables
                    state: absent

            - name: start & enable service
              ansible.builtin.systemd:
                name: mysqld
                state: started
                enabled: yes
